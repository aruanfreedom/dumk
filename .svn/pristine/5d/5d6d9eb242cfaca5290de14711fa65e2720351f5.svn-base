<?php

class Users_model_ extends CI_Model
{

    function __construct() {
        CI_Model::__construct();
    }

    /**
     *
     */
    function generate_password($sPass, $sSalt) {
        return md5(sha1($sPass) . $sSalt);
    }

    /**
     *    Auth user by E-Mail and Password hash
     *    @param string $sEmail
     *    @param string $sPass    - Hash of password, generated by $this->generate_password
     *    @return array user_data | else:0
     */
    function check_user($sLogin, $sPass) {
        $aResult = $this->get_user_data(array('login' => $sLogin, 'password' => $sPass));

        return $aResult;
    }

    /**
     *    Is exists user with $sLogin OR $sEmail
     *    @param string $sLogin
     *    @param string $sEmail
     *    @return integer         - Count of users with same sLogin or E-Mail
     *    TODO: Caching...
     */
    function check_exists($sLogin, $sEmail) {
        $this->db->or_where(array('login' => $sLogin, 'email' => $sEmail));
        return $this->db->count_all_results('users');
    }

    /**
     *    Регистрация/Обновление регистрационных данных о пользователе
     *    @param array $aUserInfo
     *    @param int $JustDoUpdateDataOfThisUserID - id of User whose userdata need updating
     *    @return integer         - New user ID
     */
    function perform_register($aUserInfo, $JustDoUpdateDataOfThisUserID = 0) {
        if (!$JustDoUpdateDataOfThisUserID) {
            $this->db->insert('users', array(
                'login' => $aUserInfo['login'],
                'password' => $aUserInfo['password'],
                'email' => $aUserInfo['email'],
                'fullname' => $aUserInfo['fullname']
            ));
            $iUserID = $this->db->insert_id();
        } else {
            $iUserID = $JustDoUpdateDataOfThisUserID;
            $this->db->update('users', array('fullname' => $aUserInfo['fullname']), array('id' => $JustDoUpdateDataOfThisUserID));
        }

        return $iUserID;
    }

    function update_userdata($aNewUserData, $iTargetUserID) {
        return $this->perform_register($aNewUserData, $iTargetUserID);
    }

    public function save_user_settings($iUserID, $aSettings) {
        $this->undefine_user_security($iUserID);
        $this->define_user_security($iUserID, $aSettings['security']);
    }

    /**
     *
     */
    function get_user_data($aParams) {
        $this->db->select('u.id user_id,
                              u.login,
                              u.email,
                              u.fullname,
                              u.is_admin,
                              u.user_role,
                              u.profile_data');

        if (isset($aParams['user_id']))
            $this->db->where(array('u.id' => (int) $aParams['user_id']));

        if (isset($aParams['login']))
            $this->db->where(array('u.login' => $aParams['login']));

        if (isset($aParams['password']))
            $this->db->where(array('u.password' => $aParams['password']));

        $this->db->from('users u');
        $oQuery = $this->db->get();

        $aResult = $oQuery->row_array();

        return $aResult;
    }

}
